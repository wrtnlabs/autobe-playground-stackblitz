import { tags } from "typia";

import { IBbsArticleCommentSnapshotFile } from "./IBbsArticleCommentSnapshotFile";
import { ICommentSnapshotFile } from "./ICommentSnapshotFile";

/**
 * Snapshot version record for a BBS article comment in the evidence-preserving
 * system.
 *
 * Allows auditability of all edits, preserving prior versions and attached
 * files.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IBbsArticleCommentSnapshot = {
  /** Primary key of the comment snapshot (bbs_article_comment_snapshots.id). */
  id: string & tags.Format<"uuid">;

  /** ID of the parent comment this snapshot is for. */
  bbs_article_comment_id: string & tags.Format<"uuid">;

  /** Format of the snapshot's text body (md/html/txt/...). */
  format: string;

  /** Body/content text of the comment at this revision. */
  body: string;

  /** Writer's IP at this revision for evidence purposes. */
  ip: string;

  /** Revision/snapshot creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Array of files attached to this specific snapshot version. */
  files?: IBbsArticleCommentSnapshotFile[];
};
export namespace IBbsArticleCommentSnapshot {
  /**
   * Request body for paginated retrieval of a comment's revision snapshot
   * history.
   *
   * Used in PATCH /bbs/articles/{articleId}/comments/{commentId}/snapshots.
   */
  export type IRequest = {
    /** Page number for snapshot history pagination. */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /** Number of snapshots per page; default is 100. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;
  };

  /**
   * Update request body for a comment snapshot
   * (bbs_article_comment_snapshots).
   *
   * Allows admin/system-level correction of snapshot details: format, body,
   * and updated file attachments. Fulfills evidentiary correction by
   * privileged actors as described in BBS requirements and Prisma schema.
   */
  export type IUpdate = {
    /**
     * Format of the comment content body (e.g., 'html', 'md', 'txt').
     *
     * Corresponds to the 'format' column in bbs_article_comment_snapshots,
     * denoting the format of the comment body for the specific snapshot.
     */
    format?: string;

    /**
     * Content body of the comment.
     *
     * Reflects the 'body' in bbs_article_comment_snapshots, holding the
     * modified text of this specific revision.
     */
    body?: string;

    /**
     * List of file associations to be attached with this snapshot update.
     *
     * References new or changed file linkage when updating the snapshot.
     * Each file entry conforms to ICommentSnapshotFile.ICreate.
     */
    to_files?: ICommentSnapshotFile.ICreate[];
  };
}
