import { tags } from "typia";

import { IAttachmentFile } from "./IAttachmentFile";

/**
 * Attachment file association for comment snapshots
 * (bbs_article_comment_snapshot_files).
 *
 * Represents the evidentiary link between a snapshot version and an attachment
 * file, with rich details and order management, referencing Prisma schema join
 * structure.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommentSnapshotFile = {
  /**
   * Primary key (ID) for the file association
   * (bbs_article_comment_snapshot_files.id).
   *
   * Uniquely identifies this mapping between comment snapshot and attachment
   * file.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID indicating the snapshot this file is attached to
   * (bbs_article_comment_snapshots.id).
   *
   * Establishes relationship context for this attachment mapping.
   */
  bbs_article_comment_snapshot_id: string & tags.Format<"uuid">;

  /**
   * UUID of the attached file record (attachment_files.id).
   *
   * Connects association to the actual file record for download/display.
   */
  attachment_file_id: string & tags.Format<"uuid">;

  /**
   * The display order (sequence) in the snapshot list
   * (bbs_article_comment_snapshot_files.sequence).
   *
   * Used for rendering attached files in the correct order.
   */
  sequence: number & tags.Type<"int32">;

  /**
   * File metadata for the associated file resource (attachment_files).
   *
   * Enables in-context display, download, and audit in UI clients.
   */
  file?: IAttachmentFile;
};
export namespace ICommentSnapshotFile {
  /**
   * Request body for partial update of attachment files for a comment
   * snapshot (bbs_article_comment_snapshot_files).
   *
   * Used to reorder, add, or remove associations, maintaining the correct
   * sequence field per UI and evidence requirements.
   */
  export type IRequest = {
    /**
     * Array of attachment file UUIDs to associate with the comment
     * snapshot.
     *
     * Reflects intended linkage/reordering/removal during partial update of
     * the snapshot's file attachments. Must correspond to valid
     * attachment_files records.
     */
    file_ids: (string & tags.Format<"uuid">)[];

    /**
     * Optional mapping for the display order (sequence) of the files.
     *
     * Allows explicit reordering of file attachments for UI/UX accuracy;
     * order must match file_ids array if included.
     */
    sequences?: (number & tags.Type<"int32">)[];
  };

  /**
   * Summary type for a file association in a comment snapshot
   * (bbs_article_comment_snapshot_files), including file metadata and order.
   *
   * Provides ordering and audit fields for client-side rendering and review
   * in revision history UIs.
   */
  export type ISummary = {
    /**
     * Primary key of the attachment file relationship
     * (bbs_article_comment_snapshot_files.id).
     *
     * Unique identifier for the attachment mapping for audit and
     * management.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Metadata of the attached file at this sequence/relationship.
     *
     * Links to the actual file resource in attachment_files, enabling
     * metadata retrieval such as filename, extension, and URL.
     */
    file: IAttachmentFile;

    /**
     * Display order (sequence) for the file in the comment snapshot.
     *
     * Ensures the intended order of files for the given revision. Sourced
     * from the 'sequence' column of bbs_article_comment_snapshot_files.
     */
    sequence: number & tags.Type<"int32">;
  };

  /**
   * Request body for creating a new attached file record in a comment
   * snapshot (bbs_article_comment_snapshot_files).
   *
   * Supplies file and sequence information to establish a new file
   * association under the BBS comment revision evidence framework.
   */
  export type ICreate = {
    /**
     * UUID of the file to be attached (attachment_files.id).
     *
     * References a pre-uploaded file for association with the comment
     * snapshot mapping.
     */
    attachment_file_id: string & tags.Format<"uuid">;

    /**
     * Display order (sequence) for this file in the snapshot.
     *
     * Represents the association's intended display order as seen by users.
     */
    sequence: number & tags.Type<"int32">;
  };

  /**
   * Update model for an attachment file mapping
   * (bbs_article_comment_snapshot_files) for a comment snapshot.
   *
   * Primarily used for resequencing file attachments as per UI/UX needs; only
   * sequence can be changed in evidence context.
   */
  export type IUpdate = {
    /**
     * Update the file's display order (sequence value) in the association
     * record.
     *
     * Directly alters the sequence column to reorder attachments.
     */
    sequence: number & tags.Type<"int32">;
  };
}
