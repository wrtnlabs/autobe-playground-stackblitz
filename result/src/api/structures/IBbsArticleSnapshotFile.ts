import { tags } from "typia";

import { IAttachmentFile } from "./IAttachmentFile";

/**
 * Represents the file attachment relationship for a specific article snapshot
 * in the evidence-preserving bulletin board system.
 *
 * Based on bbs_article_snapshot_files, includes file reference, sequence order,
 * and resolved file metadata for full download and auditability.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IBbsArticleSnapshotFile = {
  /**
   * Primary Key for this attachment relation (bbs_article_snapshot_files.id).
   *
   * Uniquely identifies the relationship, not the physical file.
   */
  id: string & tags.Format<"uuid">;

  /**
   * ID of the snapshot to which this file is attached.
   *
   * References bbs_article_snapshots.id. Connects relationship and enables
   * evidence-based traceability.
   */
  bbs_article_snapshot_id: string & tags.Format<"uuid">;

  /** ID of the attached file (attachment_files.id). */
  attachment_file_id: string & tags.Format<"uuid">;

  /**
   * Display sequence within the list of this snapshot's attachments.
   *
   * Used for end-user UX (order of preview/download) and for forensics.
   */
  sequence: number & tags.Type<"int32">;

  /**
   * Metadata about the attached file resource. See AttachmentFile for
   * detailed member info.
   */
  file: IAttachmentFile;
};
export namespace IBbsArticleSnapshotFile {
  /**
   * Request schema for paginated listing/partial update/complex query of
   * files attached to an article snapshot.
   *
   * Used to filter, search, or modify attachment order for snapshot files.
   * Maps sequences and handles per-snapshot association maintenance.
   */
  export type IRequest = {
    /** Filter for specific attachment file UUID. */
    attachment_file_id?: string & tags.Format<"uuid">;

    /** Sort order for files attached to a snapshot. */
    orderBy?: "createdAtDesc" | "createdAtAsc" | "sequenceAsc" | "sequenceDesc";

    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;
  };

  /**
   * Request body for attaching a file to a specific article snapshot in the
   * BBS system.
   *
   * Fields provide file reference (attachment_file_id) and ordering
   * (sequence) per business needs and evidentiary requirements.
   */
  export type ICreate = {
    /**
     * ID of the attachment file to link (attachment_files.id).
     *
     * Must reference an existing uploaded file resource.
     */
    attachment_file_id: string & tags.Format<"uuid">;

    /**
     * Display order (sequence) for the file in this snapshot's file list.
     *
     * Mandatory in UI/UX so that download or preview order can be explicit.
     */
    sequence: number & tags.Type<"int32">;
  };

  /**
   * Request body for updating the attachment sequence/order in a given
   * article snapshot's attachment file list.
   *
   * Only reordering field (sequence) allowed for normal operations; for
   * evidence preservation, other fields are not modifiable by typical users.
   */
  export type IUpdate = {
    /**
     * Updated display order (sequence) for this file in the snapshot.
     *
     * Utilized for user-driven attachment reordering or administrative
     * correction.
     */
    sequence: number & tags.Type<"int32">;
  };

  /**
   * Summary object for an individual file attached to an article snapshot
   * (bbs_article_snapshot_files), for display in list/detail views.
   *
   * Includes both the relationship (sequence, etc.) and the core file
   * metadata (name, extension, url, created_at) from attachment_files.
   */
  export type ISummary = {
    /**
     * UUID relation key for the file in this snapshot
     * (bbs_article_snapshot_files.id)
     */
    id: string & tags.Format<"uuid">;

    /** Display order of the file in the snapshot. */
    sequence: number & tags.Type<"int32">;

    /**
     * Basic metadata for the file asset (name, extension, url, created_at,
     * etc.)
     */
    file: IAttachmentFile.ISummary;
  };
}
